<Window x:Class="PLWPF.Update_child"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
        xmlns:BE="clr-namespace:BE;assembly=BE" 

        mc:Ignorable="d"
        Title="Update_child" Height="500" Width="300" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="childViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:Child}, CreateList=True}"/>
    </Window.Resources>
    <Grid Background="#FF0D90EC">
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="250*"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="15*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="18*"/>
            <ColumnDefinition Width="122*"/>
            <ColumnDefinition Width="135*"/>
            <ColumnDefinition Width="17*"/>
        </Grid.ColumnDefinitions>
        <Label Content="Update Children" Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="1" VerticalAlignment="Stretch" Grid.ColumnSpan="2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="20" FontFamily="Showcard Gothic" />

        <ScrollViewer Grid.ColumnSpan="2" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="4" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" >
            <Grid x:Name="ChildrenDetailGrid" DataContext="{StaticResource childViewSource}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label VerticalAlignment="Center" Grid.Row="0" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="ID : "/>
                <ComboBox x:Name="teoudatZeoutComboBox" Width="120" VerticalAlignment="Center"  Grid.Row="0" Margin="3" Height="23" HorizontalAlignment="Center" Grid.Column="1"/>

                <Label VerticalAlignment="Center" Grid.Row="1" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Mother'ID : "/>
                <ComboBox x:Name="IdMomComboBox" Grid.Column="1" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Row="1" VerticalAlignment="Center" Width="120"/>

                <Label VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Firstname:"/>
                <TextBox x:Name="firstnameTextBox" Width="120" VerticalAlignment="Center" Text="{Binding Firstname, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>

                <Label VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Birthday:"/>
                <DatePicker x:Name="birthdayDatePicker" VerticalAlignment="Center" SelectedDate="{Binding Birthday, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="1"/>

                <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Gender Child:"/>
                <ComboBox x:Name="genderChildComboBox" Width="120" VerticalAlignment="Center" SelectedItem="{Binding GenderChild}" Grid.Row="4" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>

                <Label VerticalAlignment="Center" Grid.Row="5" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Special Need:"/>
                <CheckBox x:Name="specialNeedCheckBox" VerticalAlignment="Center" Grid.Row="5" Margin="3,9,0,9" IsChecked="{Binding SpecialNeed, Mode=TwoWay, NotifyOnValidationError=False, ValidatesOnExceptions=False}" HorizontalAlignment="Left" Grid.Column="1" Content="" Width="21"/>

                <Label VerticalAlignment="Center" Grid.Row="7" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Special Needs:"/>
                <TextBox x:Name="specialNeedsTextBox" Width="120" VerticalAlignment="Center" Text="{Binding SpecialNeeds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="7" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1">
                    <TextBox.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ValidatesOnExceptions=True, ElementName=specialNeedCheckBox}" >
                                    <Setter Property="UIElement.IsEnabled" Value="false"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>

        </ScrollViewer>

        <Button x:Name="UpdateButton" Content="Update" Grid.Column="1" HorizontalAlignment="Center"  Grid.Row="5" VerticalAlignment="Center" Width="74" Click="UpdateButton_Click" Height="20"  >
            <Button.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=teoudatZeoutComboBox}" Value="">
                            <Setter Property="UIElement.IsEnabled" Value="false"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="DeleteButton" Content="Delete" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="5" VerticalAlignment="Center" Width="75" Click="DeleteButton_Click" >
            <Button.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=teoudatZeoutComboBox}" Value="">
                            <Setter Property="UIElement.IsEnabled" Value="false"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Valid Children" Grid.Column="1" HorizontalAlignment="Left" Margin="91,3,0,0" Grid.Row="3" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="2"/>

    </Grid>
</Window>
