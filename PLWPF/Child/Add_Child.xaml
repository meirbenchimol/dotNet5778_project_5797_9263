<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
        xmlns:BE="clr-namespace:BE;assembly=BE" x:Class="PLWPF.Add_Child"
        mc:Ignorable="d"
        Title="Add_Child" Height="500" Width="300" Loaded="Window_Loaded" Background="#FF15A6DC">
    <Window.Resources>
        <CollectionViewSource x:Key="childViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:Child}, CreateList=True}"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="100*"/>
            <RowDefinition Height="15*"/>
            <RowDefinition Height="5*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>

        <Label Content="ADD CHILDREN" Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="1" VerticalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Background="#FF0D90EC" FontSize="20" FontFamily="Showcard Gothic"/>


        <ScrollViewer Grid.Column="1" HorizontalAlignment="Stretch"   Grid.Row="2" VerticalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" >
            <Grid x:Name="ChidrenDetailGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" DataContext="{StaticResource childViewSource}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label VerticalAlignment="Center" Grid.Row="0" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="ID : "/>
                <TextBox x:Name="teoudatZeoutTextBox" Width="120" VerticalAlignment="Center" Text="{Binding TeoudatZeout, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="0" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>

                <Label VerticalAlignment="Center" Grid.Row="1" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Mother'ID : "/>
                <ComboBox x:Name="IdMomComboBox" Grid.Column="1" HorizontalAlignment="Center" Margin="10,0,0,0" Grid.Row="1" VerticalAlignment="Center" Width="120"/>

                <Label VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Firstname:"/>
                <TextBox x:Name="firstnameTextBox" Width="120" VerticalAlignment="Center" Text="{Binding Firstname, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>

                <Label VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Birthday:"/>
                <DatePicker x:Name="birthdayDatePicker" VerticalAlignment="Center" SelectedDate="{Binding Birthday, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="1"/>

                <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Gender Child:"/>
                <ComboBox x:Name="genderChildComboBox" Width="120" VerticalAlignment="Center" SelectedItem="{Binding GenderChild}" Grid.Row="4" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>

                <Label VerticalAlignment="Center" Grid.Row="5" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Special Need:"/>
                <CheckBox x:Name="specialNeedCheckBox" VerticalAlignment="Center" Grid.Row="5" Margin="3,9,0,9" IsChecked="{Binding SpecialNeed, Mode=TwoWay, NotifyOnValidationError=False, ValidatesOnExceptions=False}" HorizontalAlignment="Left" Grid.Column="1" Content="" Width="21"/>

                <Label VerticalAlignment="Center" Grid.Row="7" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Special Needs:"/>
                <TextBox x:Name="specialNeedsTextBox" Width="120" VerticalAlignment="Center" Text="{Binding SpecialNeeds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="7" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1">
                    <TextBox.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ValidatesOnExceptions=True, ElementName=specialNeedCheckBox}" >
                                    <Setter Property="UIElement.IsEnabled" Value="false"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

            </Grid>
        </ScrollViewer>
        
        
        <Button x:Name="AddChildButton" Content="    Add    " Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="3" VerticalAlignment="Center" Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" Click="AddChildButton_Click"  >
            <Button.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=teoudatZeoutTextBox}" Value="">
                            <Setter Property="UIElement.IsEnabled" Value="false"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>



    </Grid>
</Window>
